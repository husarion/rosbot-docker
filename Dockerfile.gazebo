ARG ROS_DISTRO=humble
ARG PREFIX=

## =========================== Install all ROS dependencies  ===============================
FROM husarnet/ros:${PREFIX}${ROS_DISTRO}-ros-core AS ros-core-with-dependencies

ARG ROS_DISTRO
ARG PREFIX

SHELL ["/bin/bash", "-c"]

WORKDIR /ros2_ws

RUN apt-get update && apt-get install -y \
        python3-pip \
        python3-rosdep \
        ros-dev-tools && \
    # Clone source
    git clone --depth 1 -b humble https://github.com/husarion/rosbot_ros.git src && \
    vcs import src < src/rosbot/rosbot_hardware.repos && \
    vcs import src < src/rosbot/rosbot_simulation.repos && \
    cp -r src/ros2_controllers/diff_drive_controller src/ && \
    cp -r src/ros2_controllers/imu_sensor_broadcaster src/ && \
    rm -rf src/ros2_controllers && \
    # Install dependencies
    rm -rf /etc/ros/rosdep/sources.list.d/20-default.list && \
    rosdep init && \
    rosdep update --rosdistro $ROS_DISTRO && \
    rosdep install --from-paths src --ignore-src -y && \
    apt-get remove -y \
        python3-pip \
        python3-rosdep \
        ros-dev-tools && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*


## =========================== Healthcheck builder ===============================

FROM ros-core-with-dependencies AS healthcheck_builder

ARG ROS_DISTRO
ARG PREFIX

WORKDIR /healthcheck_ws/src

COPY husarion_utils/healthcheck.cpp /healthcheck.cpp

RUN MYDISTRO=${PREFIX:-ros}; MYDISTRO=${MYDISTRO//-/} && \
    source /opt/$MYDISTRO/$ROS_DISTRO/setup.bash && \
    # Create health check package
    ros2 pkg create healthcheck_pkg --build-type ament_cmake --dependencies rclcpp nav_msgs sensor_msgs && \
    sed -i '/find_package(sensor_msgs REQUIRED)/a \
        add_executable(healthcheck_node src/healthcheck.cpp)\n \
        ament_target_dependencies(healthcheck_node rclcpp nav_msgs sensor_msgs)\n \
        install(TARGETS healthcheck_node DESTINATION lib/${PROJECT_NAME})' \
        ./healthcheck_pkg/CMakeLists.txt && \
    mv /healthcheck.cpp ./healthcheck_pkg/src/ && \
    cd .. && \
    colcon build --cmake-args -DCMAKE_BUILD_TYPE=Release && \
    rm -rf build log src

## =========================== ROS builder ===============================
FROM ros-core-with-dependencies AS ros_builder

ARG PREFIX

ENV IGNITION_VERSION fortress
ENV HUSARION_ROS_BUILD simulation

WORKDIR /ros2_ws

# install everything needed
RUN apt-get update && apt-get install -y \
        ros-dev-tools

RUN MYDISTRO=${PREFIX:-ros}; MYDISTRO=${MYDISTRO//-/} && \
    source /opt/$MYDISTRO/$ROS_DISTRO/setup.bash && \
    colcon build --cmake-args -DCMAKE_BUILD_TYPE=Release  && \
    echo $(cat /ros2_ws/src/rosbot/package.xml | grep '<version>' | sed -r 's/.*<version>([0-9]+.[0-9]+.[0-9]+)<\/version>/\1/g') >> /version.txt && \
    rm -rf build log

## =========================== Final Stage ===============================
FROM ros-core-with-dependencies

ARG ROS_DISTRO
ARG PREFIX

ENV IGNITION_VERSION fortress
ENV HUSARION_ROS_BUILD simulation

WORKDIR /ros2_ws

COPY --from=ros_builder /ros2_ws /ros2_ws
COPY --from=ros_builder /version.txt /version.txt
COPY husarion_utils /husarion_utils

RUN apt-get update && apt-get install -y \
        ros-$ROS_DISTRO-teleop-twist-keyboard && \
    # Size optimalization
    apt-get clean && \
    rm -rf src && \
    rm -rf /var/lib/apt/lists/*

# Run healthcheck in background
COPY --from=healthcheck_builder /healthcheck_ws /healthcheck_ws
RUN sed -i "/# <additional-user-commands>/i /husarion_utils/run_healthcheck_node.sh" /*_entrypoint.sh
HEALTHCHECK --interval=2s --timeout=1s --start-period=30s --retries=1 \
    CMD ["/husarion_utils/healthcheck.sh"]
