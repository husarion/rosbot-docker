name: Docker image for simulation

on:
  push:
    # branches:
    #   - 'ros1'
  pull_request:
    types: [closed]

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        include:
          - ros-distro: noetic

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      with:
        version: latest

    - name: Login to Docker Registry
      uses: docker/login-action@v1
      with:
        registry: docker.io
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push (production)
      if: github.ref_name == 'ros1'
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile.simulation
        platforms: linux/amd64
        push: true
        build-args: |
          ROS_DISTRO=${{ matrix.ros-distro }}
        tags: husarion/rosbot:${{ matrix.ros-distro }}-simulation
        cache-from: type=registry,ref=husarion/rosbot:${{ matrix.ros-distro }}-simulation
        cache-to: type=inline

    - name: Build and push (development)
      if: github.ref_name != 'ros1'
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile.simulation
        platforms: linux/amd64
        push: true
        build-args: |
          ROS_DISTRO=${{ matrix.ros-distro }}
        tags: husarion/rosbot:${{ matrix.ros-distro }}-simulation-${{ github.head_ref || github.ref_name }}
        cache-from: type=registry,ref=husarion/rosbot:${{ matrix.ros-distro }}-simulation-${{ github.head_ref || github.ref_name }}
        cache-to: type=inline
