name: Build/Publish Docker Image 

on: 
  workflow_dispatch:
    inputs:
      build_type:
        description: "Is it a \"development\" or a \"stable\" release?"
        required: true
        default: 'development'
        type: choice
        options:
          - development
          - stable
      target_distro:
        description: "In case of \"stable\" release specify the ROS distro of the existing docker image (eg. humble)"
        type: string
        default: "ardent"
      target_release:
        description: "In case of \"stable\" release specify the version of the existing docker image (eg. 1.0.12)"
        type: string
        default: "0.0.0"
      target_date:
        description: "In case of \"stable\" release specify the date of the existing docker image in format YYYYMMDD (eg. 20220124)"
        type: string
        default: "20131206"
  repository_dispatch:
    types: [rebuild]
  pull_request:
    types:
      - closed
      - opened

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:

        include:
          - dockerfile: Dockerfile.hardware
            additional_img_text: "-test"
            platforms: "linux/amd64, linux/arm64"
            ros_distro: "humble"
          # - dockerfile: Dockerfile.simulation
          #   additional_img_text: "-simulation"
          #   platforms: "linux/amd64"

    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Build Docker Image
        # uses: husarion-ci/ros-docker-img-action@v0.1
        uses: ./.github/actions/ros-docker-img
        with:
          dockerhub_username: ${{ secrets.DOCKERHUB_USERNAME }}
          dockerhub_token:  ${{ secrets.DOCKERHUB_TOKEN }}
          dockerfile: ${{ matrix.dockerfile }}
          additional_img_text: ${{ matrix.additional_img_text }}
          build_type: ${{ inputs.build_type }}
          ros_distro: ${{ matrix.ros_distro }}"
          platforms: ${{ matrix.platforms }}
          # variables important only for stable release
          target_distro: ${{ inputs.target_distro }}
          target_release: ${{ inputs.target_release }}
          target_date: ${{ inputs.target_date }}



# name: Docker image for hardware

# on:
#   push:
#   workflow_dispatch:
#   repository_dispatch:
#     types: [ros-package-update]
#   pull_request:
#     types: [closed]

# jobs:
#   build:
#     runs-on: ubuntu-20.04
#     strategy:
#       fail-fast: false
#       matrix:
#         include:
#           - ros-distro: humble
#             rosbot-fw-release: "0.2.0"
#             platforms: "linux/amd64, linux/arm64"

#     steps:

#     - name: Print event name
#       run: echo "Event name ${{ github.event_name }}"

#     - name: Print branch name
#       run: echo ${{ github.ref_name}}

#     - name: Set SHORT_DATE env
#       run: echo "SHORT_DATE=$(date +%y-%m-%d)" >> $GITHUB_ENV

#     - name: Checkout
#       uses: actions/checkout@v2

#     - name: Set up QEMU
#       uses: docker/setup-qemu-action@v1

#     - name: Set up Docker Buildx
#       uses: docker/setup-buildx-action@v1
#       with:
#         version: latest

#     - name: Login to Docker Registry
#       uses: docker/login-action@v1
#       with:
#         registry: docker.io
#         username: ${{ secrets.DOCKERHUB_USERNAME }}
#         password: ${{ secrets.DOCKERHUB_TOKEN }}

#     - name: Build and push (production)
#       if: github.ref_name == 'ros2' && github.event_name == 'workflow_dispatch'
#       uses: docker/build-push-action@v2
#       with:
#         context: .
#         file: ./Dockerfile.hardware
#         platforms: ${{ matrix.platforms }}
#         push: true
#         build-args: |
#           ROS_DISTRO=${{ matrix.ros-distro }}
#           ROSBOT_FW_RELEASE=${{ matrix.rosbot-fw-release }}
#         tags: |
#           husarion/rosbot:${{ matrix.ros-distro }}
#           husarion/rosbot:${{ matrix.ros-distro }}-${{ env.SHORT_DATE }}

#     - name: Build and push (latest only)
#       if: github.ref_name == 'ros2' && github.event_name != 'workflow_dispatch'
#       uses: docker/build-push-action@v2
#       with:
#         context: .
#         file: ./Dockerfile.hardware
#         platforms: ${{ matrix.platforms }}
#         push: true
#         build-args: |
#           ROS_DISTRO=${{ matrix.ros-distro }}
#           ROSBOT_FW_RELEASE=${{ matrix.rosbot-fw-release }}
#         tags: husarion/rosbot:${{ matrix.ros-distro }}

#     - name: Build and push (development)
#       if: github.ref_name != 'ros2'
#       uses: docker/build-push-action@v2
#       with:
#         context: .
#         file: ./Dockerfile.hardware
#         platforms: ${{ matrix.platforms }}
#         push: true
#         build-args: |
#           ROS_DISTRO=${{ matrix.ros-distro }}
#           ROSBOT_FW_RELEASE=${{ matrix.rosbot-fw-release }}
#         tags: husarion/rosbot:${{ matrix.ros-distro }}-${{ github.head_ref || github.ref_name }}
