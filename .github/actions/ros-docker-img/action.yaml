name: 'ROS Docker Image'
description: 'Publish docker images with tags containing ROS distro, package version, release date and manage stable releases.'
inputs:
  dockerhub_username:
    description: "DockerHub username"
    required: true
  dockerhub_token:
    description: "DockerHub token"
    required: true
  main_branch_name:
    description: "The name of the main branch - typically \"main\" or \"master\""
    default: "main"
  dockerfile:
    description: "target Dockerfile"
    default: "Dockerfile"
  repo_name:
    description: "Custom repository name: keep empty to get from repo name"
    default: ""
  build_type:
    description: "\"stable\" or \"development\" release"
    default: "development"
  ros_distro:
    description: "Target ROS distribution"
    default: "humble"
  platforms:
    description: "Target architectures"
    default: "linux/amd64, linux/arm64"
  # variables important only for stable release
  target_distro:
    description: "[Stable release only] Point to the ROS distro (part of tag) of the EXISTING docker image on DockerHub"
    default: "ardent"   
  target_release:
    description: "[Stable release only] Point to the release number (part of tag) of the EXISTING docker image on DockerHub"
    default: "0.0.0"     
  target_date: 
    description: "[Stable release only] Point to the date (part of tag) of the EXISTING docker image on DockerHub"
    default: "20131206" 
outputs: {}
branding:
  icon: 'box'
  color: 'red'
  
runs:
  using: "composite"
  steps:
    - name: Print branch name
      run: echo ${{ github.ref_name}}
      shell: bash

    - name: Set SHORT_DATE env
      run: echo "SHORT_DATE=$(date +%Y%m%d)" >> $GITHUB_ENV
      shell: bash

    - name: Set IMAGE_NAME env (default)
      if: inputs.repo_name == ""
      run: echo "IMAGE_NAME=$(echo "${{ github.event.repository.name }}" | sed -r 's/([0-9a-zA-Z]+)-docker/\1/g')" >> $GITHUB_ENV
      shell: bash

    - name: Set IMAGE_NAME env (custom)
      if: inputs.repo_name != ""
      run: echo "IMAGE_NAME=${{ inputs.repo_name }}" >> $GITHUB_ENV
      shell: bash

    - name: Print envs
      run: |
        echo "IMAGE_NAME=${{ env.IMAGE_NAME }}"
        echo "SHORT_DATE=${{ env.SHORT_DATE }}"
        echo "inputs.build_type=${{ inputs.build_type }}"
        echo "inputs.target_distro=${{ inputs.target_distro }}"
        echo "github.event_name=${{ github.event_name }}"
        echo "github.ref_name=${{ github.ref_name }}"
        echo "inputs.ros_distro=${{ inputs.ros_distro }}"
      shell: bash

    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      with:
        version: latest

    - name: Login to Docker Registry
      uses: docker/login-action@v2
      with:
        registry: docker.io
        username: ${{ inputs.dockerhub_username }}
        password: ${{ inputs.dockerhub_token }}
    
    # ===========================================
    # Test on PR opened
    # ===========================================

    - name: "[feature] [dev] Test on PR opened" 
      if: github.event.pull_request.opened == true
      uses: docker/build-push-action@v3
      with:
        file: ${{ inputs.dockerfile }}
        platforms: ${{ inputs.platforms }}
        push: false
        build-args: |
          ROS_DISTRO=${{ inputs.ros_distro }}
        tags: husarion/${{ env.IMAGE_NAME }}${{ inputs.additional_img_text }}:${{ inputs.ros_distro }}-nightly

    # ===========================================
    # Nightly releases
    # ===========================================

    - name: "[main] [dev] Just build the image to retrieve the version" 
      if: >
        github.ref_name == '${{ inputs.main_branch_name }}"' 
          && 
        ( github.event_name == 'workflow_dispatch' || github.event_name == 'repository_dispatch' || github.event.pull_request.merged == true )
          &&
        inputs.build_type != 'stable'
      uses: docker/build-push-action@v3
      with:
        file: ${{ inputs.dockerfile }}
        push: false
        load: true
        build-args: |
          ROS_DISTRO=${{ inputs.ros_distro }}
        tags: husarion/${{ env.IMAGE_NAME }}${{ inputs.additional_img_text }}:${{ inputs.ros_distro }}-nightly

    - name: "[main] [dev] Set VERSION env"
      if: >
        github.ref_name == '${{ inputs.main_branch_name }}"' 
          && 
        ( github.event_name == 'workflow_dispatch' || github.event_name == 'repository_dispatch' || github.event.pull_request.merged == true )
          &&
        inputs.build_type != 'stable'
      run: echo "VERSION=$(docker run --rm husarion/${{ env.IMAGE_NAME }}:${{ inputs.ros_distro }}-nightly bash -c "cat /version.txt")" >> $GITHUB_ENV
      shell: bash

    - name: "[main] [dev] Build and push"
      if: >
        github.ref_name == '${{ inputs.main_branch_name }}"' 
          && 
        ( github.event_name == 'workflow_dispatch' || github.event_name == 'repository_dispatch' || github.event.pull_request.merged == true )
          &&
        inputs.build_type != 'stable'
      uses: docker/build-push-action@v3
      with:
        file: ${{ inputs.dockerfile }}
        platforms: ${{ inputs.platforms }}
        push: true
        build-args: |
          ROS_DISTRO=${{ inputs.ros_distro }}
        tags: |
          husarion/${{ env.IMAGE_NAME }}${{ inputs.additional_img_text }}:${{ inputs.ros_distro }}-nightly
          husarion/${{ env.IMAGE_NAME }}${{ inputs.additional_img_text }}:${{ inputs.ros_distro }}-${{ env.VERSION }}-${{ env.SHORT_DATE }}

    # ===========================================
    # Stable releases
    # ===========================================

    - name: "[main] [stable] Pull stable releases from a container registry"
      if: >
        github.ref_name == '${{ inputs.main_branch_name }}"' 
          && 
        github.event_name == 'workflow_dispatch'
          && 
        inputs.build_type == 'stable'
          &&
        inputs.ros_distro == inputs.target_distro
      run: |
        mkdir temp
        echo "FROM husarion/${{ env.IMAGE_NAME }}${{ inputs.additional_img_text }}:${{ inputs.target_distro }}-${{ inputs.target_release }}-${{ inputs.target_date }}" > temp/Dockerfile
      shell: bash

    - name: "[main] [stable] Build and push"
      if: >
        github.ref_name == '${{ inputs.main_branch_name }}"' 
          && 
        github.event_name == 'workflow_dispatch'
          && 
        inputs.build_type == 'stable'
          &&
        inputs.ros_distro == inputs.target_distro
      uses: docker/build-push-action@v3
      with:
        platforms: ${{ inputs.platforms }}
        context: ./temp
        push: true
        build-args: |
          ROS_DISTRO=${{ inputs.target_distro }}
        tags: |
          husarion/${{ env.IMAGE_NAME }}${{ inputs.additional_img_text }}:${{ inputs.target_distro }}
          husarion/${{ env.IMAGE_NAME }}${{ inputs.additional_img_text }}:${{ inputs.target_distro }}-nightly
          husarion/${{ env.IMAGE_NAME }}${{ inputs.additional_img_text }}:${{ inputs.target_distro }}-${{ inputs.target_release }}
          husarion/${{ env.IMAGE_NAME }}${{ inputs.additional_img_text }}:${{ inputs.target_distro }}-${{ inputs.target_release }}-${{ inputs.target_date }}
          husarion/${{ env.IMAGE_NAME }}${{ inputs.additional_img_text }}:${{ inputs.target_distro }}-${{ inputs.target_release }}-${{ inputs.target_date }}-stable

    # ===========================================
    # Feature branch releases
    # ===========================================

    - name: "[feature] Build and push"
      if: github.ref_name != '${{ inputs.main_branch_name }}"' && github.event_name == 'workflow_dispatch'
      uses: docker/build-push-action@v3
      with:
        file: ${{ inputs.dockerfile }}
        platforms: ${{ inputs.platforms }}
        push: true
        build-args: |
          ROS_DISTRO=${{ inputs.ros_distro }}
        tags: husarion/${{ env.IMAGE_NAME }}${{ inputs.additional_img_text }}:${{ inputs.ros_distro }}-${{ github.head_ref || github.ref_name }}
