ARG ROS_DISTRO=humble
ARG PREFIX=
ARG ROSBOT_FW_RELEASE=0.3.4
ARG ROSBOT_ROS_RELEASE=0.6.0
## ============================ STM32FLASH =================================
# stm32flash needs an older version of glibc (2.28), which is why ubuntu 18.04 was used
FROM ubuntu:18.04 AS stm32flash_builder_and_downloader

ARG ROS_DISTRO
ARG ROSBOT_FW_RELEASE
ARG ROSBOT_ROS_RELEASE

SHELL ["/bin/bash", "-c"]

# official releases are only for intel archs, so we need to build stm32flash from sources
RUN apt-get update && apt-get install -y \
		curl \
		git \
		build-essential \
		cmake && \
	git clone https://github.com/stm32duino/stm32flash.git && \
	cd stm32flash/ && \
	make all

RUN echo ros_distro=$ROS_DISTRO firmware_release=$ROSBOT_FW_RELEASE rosbot_ros_release=$ROSBOT_ROS_RELEASE

# Copy firmware binaries
RUN curl -L https://github.com/husarion/rosbot_ros2_firmware/releases/download/$ROSBOT_FW_RELEASE/firmware.bin -o /firmware.bin && \
    curl -L https://github.com/husarion/rosbot_ros2_firmware/releases/download/$ROSBOT_FW_RELEASE/firmware.hex -o /firmware.hex

RUN curl -L https://github.com/husarion/rosbot_ros/archive/refs/tags/$ROSBOT_ROS_RELEASE.tar.gz -o /rosbot_ros.tar.gz && \
	tar -xvkf /rosbot_ros.tar.gz && \
	mv rosbot_ros-$ROSBOT_ROS_RELEASE /rosbot_ros

## =========================== ROS image ===============================
FROM husarnet/ros:${PREFIX}${ROS_DISTRO}-ros-core

ARG ROS_DISTRO
ARG PREFIX

SHELL ["/bin/bash", "-c"]

RUN mkdir -p /ros2_ws/src && cd /ros2_ws/src
WORKDIR /ros2_ws

RUN apt-get update && apt-get install -y \
		git \
        python3-colcon-common-extensions \
        python3-rosdep \
        python3-vcstool \
		python3-sh \
		python3-periphery \
		build-essential

# copy firmware built in previous stage and downloaded repository
COPY --from=stm32flash_builder_and_downloader /firmware.bin /root/firmware.bin
COPY --from=stm32flash_builder_and_downloader /firmware.hex /root/firmware.hex
COPY --from=stm32flash_builder_and_downloader /stm32flash/stm32flash /usr/bin/stm32flash
COPY --from=stm32flash_builder_and_downloader /rosbot_ros /ros2_ws/src/rosbot_ros

RUN	MYDISTRO=${PREFIX:-ros}; MYDISTRO=${MYDISTRO//-/} && \
	vcs import src < src/rosbot_ros/rosbot/rosbot_hardware.repos && \
	# it is necessary to remove simulation - otherwise rosdep tries to install dependencies
    rm -r src/rosbot_ros/rosbot_gazebo && \
    # without this line (using vulcanexus base image) rosdep init throws error: "ERROR: default sources list file already exists:"
    rm -rf /etc/ros/rosdep/sources.list.d/20-default.list && \
	rosdep init && \
    rosdep update --rosdistro $ROS_DISTRO && \
    rosdep install -i --from-path src --rosdistro $ROS_DISTRO -y && \
	source /opt/$MYDISTRO/$ROS_DISTRO/setup.bash && \
	colcon build && \
	# clear ubuntu packages
	apt-get clean && \
	apt-get remove -y \
		git \
		python3-colcon-common-extensions \
		python3-rosdep \
		python3-vcstool \
		build-essential && \
	rm -rf /var/lib/apt/lists/*

RUN echo $(cat /ros2_ws/src/rosbot_ros/rosbot_description/package.xml | grep '<version>' | sed -r 's/.*<version>([0-9]+.[0-9]+.[0-9]+)<\/version>/\1/g') >> /version.txt

# copy scripts
COPY ./flash-firmware.py /
