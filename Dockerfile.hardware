ARG ROS_DISTRO=noetic
ARG ROSBOT_FW_RELEASE=0.16.2

## =========================== ROS package builder ===============================
FROM ros:$ROS_DISTRO-ros-core AS pkg-builder

SHELL ["/bin/bash", "-c"]

RUN apt update && apt install -y \
		git \
		python3-pip \
		ros-$ROS_DISTRO-rosserial-python \
		ros-$ROS_DISTRO-rosserial-server \
		ros-$ROS_DISTRO-rosserial-client \
		ros-$ROS_DISTRO-rosserial-msgs \
		ros-$ROS_DISTRO-move-base-msgs \
		ros-$ROS_DISTRO-robot-localization \
		ros-$ROS_DISTRO-xacro \
		ros-$ROS_DISTRO-transmission-interface \
		ros-$ROS_DISTRO-controller-manager \
		ros-$ROS_DISTRO-robot-state-publisher && \
	pip3 install python-periphery && \
	pip3 install sh && \
	pip3 install pyserial && \
	python3 -m pip install --upgrade pyserial && \
	# clear ubuntu packages
	apt clean && \
	rm -rf /var/lib/apt/lists/*

WORKDIR /ros_ws

# clone robot github repositories
RUN mkdir -p src && \
	git clone https://github.com/husarion/rosbot_ros.git --branch=melodic src/rosbot_ros && \
	git clone https://github.com/husarion/rosbot_ekf.git --branch=master src/rosbot_ekf

# build ROS workspace
RUN source /opt/ros/$ROS_DISTRO/setup.bash && \
	catkin_make -DCATKIN_ENABLE_TESTING=0 -DCMAKE_BUILD_TYPE=Release


## =========================== Final Stage ===============================
FROM ros:$ROS_DISTRO-ros-core

ARG ROSBOT_FW_RELEASE

SHELL ["/bin/bash", "-c"]

RUN apt update && apt install -y \
		curl \
		python3-pip \
		stm32flash \
		ros-$ROS_DISTRO-rosserial-python \
		ros-$ROS_DISTRO-rosserial-server \
		ros-$ROS_DISTRO-rosserial-client \
		ros-$ROS_DISTRO-rosserial-msgs \
		ros-$ROS_DISTRO-move-base-msgs \
		ros-$ROS_DISTRO-robot-localization \
		ros-$ROS_DISTRO-xacro \
		ros-$ROS_DISTRO-transmission-interface \
		ros-$ROS_DISTRO-controller-manager \
		ros-$ROS_DISTRO-robot-state-publisher && \
	pip3 install python-periphery && \
	pip3 install sh && \
	pip3 install pyserial && \
	python3 -m pip install --upgrade pyserial && \
	# clear ubuntu packages
	apt clean && \
	rm -rf /var/lib/apt/lists/*

# copy ROS package from previous step
COPY --from=pkg-builder /ros_ws /ros_ws

# copy firmware built
RUN cd /root && \
	curl -LJ https://github.com/husarion/rosbot-stm32-firmware/releases/download/$ROSBOT_FW_RELEASE/firmware_diff.bin -o firmware_diff.bin && \
	curl -LJ https://github.com/husarion/rosbot-stm32-firmware/releases/download/$ROSBOT_FW_RELEASE/firmware_mec.bin -o firmware_mecanum.bin

# copy scripts
COPY ./flash-firmware.py /
COPY ./ros_entrypoint.sh /

RUN echo ". /opt/ros/$ROS_DISTRO/setup.bash" >> ~/.bashrc && \
	echo ". /ros_ws/devel/setup.bash" >> ~/.bashrc && \
	# allows us to run: docker exec -it rosbot bash --login -c "rostopic list"
	echo ". /opt/ros/$ROS_DISTRO/setup.bash" >> ~/.profile && \
	echo ". /ros_ws/devel/setup.bash" >> ~/.profile

ENTRYPOINT ["/ros_entrypoint.sh"]
CMD ["bash"]
