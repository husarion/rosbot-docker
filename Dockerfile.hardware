ARG ROS_DISTRO=humble
ARG ROSBOT_FW_RELEASE=0.3.0
## ============================ STM32FLASH =================================
# stm32flash needs an older version of glibc (2.28), which is why ubuntu 18.04 was used
FROM ubuntu:18.04 AS stm32flash_builder

ARG ROS_DISTRO
ARG ROSBOT_FW_RELEASE

SHELL ["/bin/bash", "-c"]

# official releases are only for intel archs, so we need to build stm32flash from sources
RUN apt-get update && apt-get install -y \
		curl \
		git \
		build-essential \
		cmake && \
	git clone https://github.com/stm32duino/stm32flash.git && \
	cd stm32flash/ && \
	make all

RUN echo ros_distro=$ROS_DISTRO firmware_release=$ROSBOT_FW_RELEASE

# Copy firmware binaries
RUN curl -L https://github.com/husarion/rosbot_ros2_firmware/releases/download/$ROSBOT_FW_RELEASE/firmware.bin -o /firmware.bin && \
    curl -L https://github.com/husarion/rosbot_ros2_firmware/releases/download/$ROSBOT_FW_RELEASE/firmware.hex -o /firmware.hex

## =========================== ROS image ===============================
FROM husarnet/ros:$ROS_DISTRO-ros-core
ARG ROS_DISTRO

SHELL ["/bin/bash", "-c"]

RUN mkdir -p /ros2_ws/src && cd /ros2_ws/src
WORKDIR /ros2_ws

RUN apt-get update && apt-get install -y \
		git \
        python3-colcon-common-extensions \
        python3-rosdep \
        python3-vcstool \
		build-essential

RUN	git clone https://github.com/husarion/rosbot_ros.git src/rosbot_ros -b refactor-project-struct && \
	vcs import src < src/rosbot_ros/rosbot/rosbot_hardware.repos && \
	rosdep init && \
    rosdep update --rosdistro $ROS_DISTRO && \
    rosdep install -i --from-path src --rosdistro $ROS_DISTRO -y

RUN source /opt/ros/$ROS_DISTRO/setup.bash && \
	colcon build && \
	# clear ubuntu packages
	apt-get clean && \
	apt-get remove -y \
	git \
	python3-colcon-common-extensions \
	python3-rosdep \
	python3-vcstool \
	build-essential && \
	rm -rf /var/lib/apt/lists/*

# copy firmware built in previous stage
COPY --from=stm32flash_builder /firmware.bin /root/firmware.bin
COPY --from=stm32flash_builder /firmware.hex /root/firmware.hex
COPY --from=stm32flash_builder /stm32flash/stm32flash /usr/bin/stm32flash

RUN echo $(cat /ros2_ws/src/rosbot_ros/rosbot_description/package.xml | grep '<version>' | sed -r 's/.*<version>([0-9]+.[0-9]+.[0-9]+)<\/version>/\1/g') >> /version.txt

# copy scripts
COPY ./flash-firmware.py /

RUN echo ". /opt/ros/$ROS_DISTRO/setup.bash" >> ~/.bashrc && \
	echo ". /ros2_ws/install/setup.bash" >> ~/.bashrc && \
	# allows us to run: docker exec -it rosbot bash --login -c "rostopic list"
	echo ". /opt/ros/$ROS_DISTRO/setup.bash" >> ~/.profile && \
	echo ". /ros2_ws/install/setup.bash" >> ~/.profile